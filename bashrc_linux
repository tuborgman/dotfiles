#!/bin/bash

# bash-completion
if [[ $PS1 && -f /usr/share/bash-completion/bash_completion ]]; then
  . /usr/share/bash-completion/bash_completion
else
  echo "bash-completion is not installed, not everything may work as expected!"
fi

# Sensible Bash (https://github.com/mrzool/bash-sensible)
source $DOTFILES/lib/bash-sensible/sensible.bash

# Solarized dircolors
eval $(dircolors $DOTFILES/lib/dircolors-solarized/dircolors.ansi-universal)
alias ls='ls -F --color'

# Ruby gems
export GEM_HOME=$(ruby -e 'print Gem.user_dir')
export GEM_PATH=$GEM_HOME
export PATH=$PATH:$PATH:$GEM_HOME/bin

# Start a ssh-agent session if there isn't already one running and save its output.
#
# If there is already a session running, load its cached output to set the
# required environment variables for it to work.
if ! pgrep -u "$USER" ssh-agent > /dev/null; then
    ssh-agent > ~/.ssh-agent-cache
fi
if [[ "$SSH_AGENT_PID" == "" ]]; then
    eval "$(<~/.ssh-agent-cache)"
fi

# Utility functions
function reimburse() {
  local inbox_location="$HOME/Dropbox/hackclub/docs/receipts/zach_reimbursements_inbox"
  local file_path="$1"
  local file_name=$(basename "$file_path")

  if [[ -z "$file_path" ]]; then
    >&2 echo "Receipt to reimburse must be provided"
    return
  fi

  if [[ -f "$inbox_location/$file_name" ]]; then
    >&2 echo "$file_name already exists in reimbursement inbox"
  else
    mv "$file_path" "$inbox_location"
  fi
}
